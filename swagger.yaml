openapi: 3.0.3
info:
  title: API - Noise Sensor
  description: This is project noise sensor
  termsOfService: http://swagger.io/terms/
  contact:
    email: takistech.dev@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:5000/api/v1/
tags:
  - name: User
    description: API about user
paths:
  /create-user:
    post:
      tags:
        - User
      summary: Add a user in data
      description: Add a user in data
      operationId: addUser
      requestBody:
        description: Create a user in data
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: takis@gmail.com
                lastName:
                  type: string
                  example: takis
                firstName:
                  type: string
                  example: tech
                roleID: 
                  type: integer
                  example: 1
                password:
                  type: string
                  example: "123456"
                phone:
                  type: string
                  example: "0123456789"
        required: true
      responses:
        '200':
          description: Create a user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  mes:
                    type: string
                    example: "OK"
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        example: takis@gmail.com
                      lastName:
                        type: string
                        example: takis
                      firstName:
                        type: string
                        example: tech
                      roleID: 
                        type: integer
                        example: 1
                      password:
                        type: string
                        example: "123456"
                      phone:
                        type: string
                        example: "0123456789"
                      address:
                        type: string
                        example: null
                      
        '401':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /get-all-user:
    get:
      tags:
        - User
      summary: Get all user has pagination
      description: Get all user has pagination
      operationId: getUser
      parameters:
        - name: limit
          in: query
          description: Limit user
          required: true
          explode: true
          schema:
            type: integer
            default: 2
        - name: page
          in: query
          description: Page user
          required: true
          explode: true
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: get user successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  mes:
                    type: string
                    example: "Get users successfully"
                  data:
                    type: object
                    properties:
                      totalRows:
                        type: integer
                        example: 2
                      totalPage: 
                        type: integer
                        example: 2
                      user:
                        type: array
                        items: 
                          type: object
                        properties:
                          email:
                            type: string
                            example: takis@gmail.com
                          lastName:
                            type: string
                            example: takis
                          firstName:
                            type: string
                            example: tech
                          roleID: 
                            type: integer
                            example: 1
                          password:
                            type: string
                            example: "123456"
                          phone:
                            type: string
                            example: "0123456789"
                          address:
                            type: string
                            example: null
                          

                              
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /update-user:
    put:
      tags:
        - User
      summary: Finds user by id
      description: Finds user by id
      operationId: updateUser
      requestBody:
        description: Update a user in data
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                email:
                  type: string
                  example: takis@gmail.com
                lastName:
                  type: string
                  example: takis
                firstName:
                  type: string
                  example: tech
                roleID: 
                  type: integer
                  example: 1
                password:
                  type: string
                  example: "123456"
                phone:
                  type: string
                  example: "0123456789"
                address:
                  type: string
                  example: "HCM"
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  mes:
                    type: string
                    example: "OK"
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        example: takis@gmail.com
                      lastName:
                        type: string
                        example: takis
                      firstName:
                        type: string
                        example: tech
                      roleID: 
                        type: integer
                        example: 1
                      password:
                        type: string
                        example: "123456"
                      phone:
                        type: string
                        example: "0123456789"
                      address:
                        type: string
                        example: "HCM"
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /delete-user/{userId}:
    delete:
      tags:
        - User
      summary: Delete a user
      description: Delete a user
      operationId: deleteById
      parameters:
        - name: userId
          in: path
          description: ID of user in url
          required: true
          schema:
            type: integer
            format: integer
      responses:
        '200':
          description: delete a user successful 
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  mes:
                    type: string
                    example: "OK"
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
    